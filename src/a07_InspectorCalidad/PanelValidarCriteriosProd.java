/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package a07_InspectorCalidad;

import b_modelos_para_tablas.CriteriosVprodVreq;
import b_modelos.criteriosDeCalidad;
import java.util.ArrayList;
import b_metodos_conexion.extraccion_tablas;
import java.awt.BorderLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static a07_InspectorCalidad.PrincipalInspectorCalidad.panelPrincipal;

/**
 *
 * @author jolo
 */
/*
CUARTO CASO DE USO IMPORTANTE DEL SISTEMA - 
PROCESO DE NEGOCIO: GESTION DE REQUERIMIENTOS DEL CLIENTE
*/


public class PanelValidarCriteriosProd extends javax.swing.JPanel {
    ArrayList<CriteriosVprodVreq> cpr = null;
    extraccion_tablas et = new extraccion_tablas();
    JPanel pn=null;
    Object [][] arreglo =null;
    /**
     * Creates new form PanelValidarCriteriosProd
     * @param OperarioProduccion
     */
    
    public ArrayList<CriteriosVprodVreq> getCPR (){
        return this.cpr;
    }
    
    public PanelValidarCriteriosProd(int OperarioProduccion) {
        initComponents();
        cpr = et.lista_criterios_prod_req(OperarioProduccion);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        EnviarValidacionesCC = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        cuadroObservaciones = new javax.swing.JTextArea();

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Validar criterios de producción");

        jTable1.setModel(

            new javax.swing.table.DefaultTableModel(
                new Object [][] {

                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null},
                    {null, null, null, null, null}

                },
                new String [] {
                    "ID","Nombre criterio", "Estado", "Nombre requerimiento", "Descripcion", "Fecha entrega"
                }
            ) {
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    false, false, true, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            }

        );
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Cancelar");

        EnviarValidacionesCC.setText("Enviar validaciones");
        EnviarValidacionesCC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarValidacionesCCActionPerformed(evt);
            }
        });

        jLabel2.setText("Escriba aquí las observaciones:");

        cuadroObservaciones.setColumns(20);
        cuadroObservaciones.setRows(5);
        jScrollPane2.setViewportView(cuadroObservaciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(EnviarValidacionesCC))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(167, 167, 167))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EnviarValidacionesCC)
                            .addComponent(jButton1))
                        .addContainerGap())))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded

        int n= cpr.size();
        arreglo = new Object [n][6];
        for (int i = 0; i < n; i++) {
            arreglo[i][0]=cpr.get(i).getIDCriterioProduccion();
            arreglo[i][1]=cpr.get(i).getNombreCriterio();
            arreglo[i][2]=cpr.get(i).isEsAceptable();
            arreglo[i][3]=cpr.get(i).getNombreRequerimiento();
            arreglo[i][4]=cpr.get(i).getDescripcion();
            arreglo[i][5]=cpr.get(i).getFechaEntrega();
        }
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            arreglo,
            new String [] {"ID","Nombre criterio", "Estado", "Nombre requerimiento", "Descripcion", "Fecha entrega"}
            ){
                Class[] types = new Class [] {
                    java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
                };
                boolean[] canEdit = new boolean [] {
                    false, false, true, false, false, false
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            }

        );
        

        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorAdded

    private void EnviarValidacionesCCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarValidacionesCCActionPerformed
        int n = jTable1.getRowCount();
        System.out.println(n);
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int numeroFilas = dtm.getRowCount();
        Object [][] aqui = new Object[numeroFilas][2];
        String impresion = "";
        String obs = cuadroObservaciones.getText(); 
        criteriosDeCalidad ccal = null;
        for (int i = 0; i < numeroFilas; i++){
            //ID DE CRITERIO DE CALIDAD
            aqui[i][0]=dtm.getValueAt(i, 0);
            int idcc = (int) aqui[i][0];
            //COMO FUE MARCADO EN LA TABLA???
            aqui[i][1]=dtm.getValueAt(i, 2);
            boolean chk = (boolean) aqui[i][1];
            impresion = aqui[i][0] + " --- "+aqui[i][1];
            System.out.println(impresion);
            /*
            ESTADOS DE CRITERIO SOLO HAY POCOS
            -sin asignar: al agregar, solo poner este estado. esaceptable:0 
            -asignado: cuando tiene un inspector pero sin revizar aun. esaceptable:0 
            -rechazado: cuando inspector detecta problemas, rechaza. esaceptable:0 
            -aprobado: cuando inspector reviza y comfirma.esaceptable:1
            */
            if (!chk){
                ccal = new criteriosDeCalidad(idcc, chk, "rechazado", obs);
            }else{
                ccal = new criteriosDeCalidad(idcc, chk, "aprobado", obs);
            }
            ccal.modificarBBDD_RevisionHecha();
        }
        panelPrincipal.removeAll();
        panelPrincipal.revalidate();
        panelPrincipal.repaint();  
        
        /*
        CODIGO PARA CONVERTIR UN JTABLE EN ARRAY DE ARRAYS
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int p = dtm.getRowCount();
        int q = dtm.getColumnCount();
        Object [][] aqui = new Object[p][q];
        String impresion = "";
        for (int i = 0; i < p; i++) {
            for (int j = 0; j < p; j++) {
                aqui[i][j]=dtm.getValueAt(i, j);
                impresion += aqui[i][j] + " --- ";
            }
            impresion +="\n";
        }
        System.out.println(impresion);
        */
        
        /* prototipo de implementacion a usar 
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        int p = dtm.getRowCount();
        Object [] aqui = new Object[p];
        String impresion = "";
        for (int i = 0; i < p; i++) {
            aqui[i]=dtm.getValueAt(i, 1);
            impresion += aqui[i];
            impresion +="\n";
        }
        System.out.println(impresion);

        */
        // TODO add your handling code here:
    }//GEN-LAST:event_EnviarValidacionesCCActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EnviarValidacionesCC;
    private javax.swing.JTextArea cuadroObservaciones;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
